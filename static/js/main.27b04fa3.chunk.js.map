{"version":3,"sources":["components/Table1.jsx","components/Table2.jsx","App.js","index.js"],"names":["Table1","_ref","heading","selectedItems","setSelectedItems","handleShift","componentToPrintRef","useRef","handleExport","useReactToPrint","content","current","_jsxs","className","children","_jsx","style","textAlign","map","h","scope","DragDropContext","onDragEnd","result","destination","items","Array","from","_items$splice","splice","source","index","reorderedItem","_slicedToArray","Droppable","droppableId","provided","_objectSpread","droppableProps","ref","innerRef","ob","Draggable","draggableId","concat","draggableProps","dragHandleProps","align","cursor","onClick","placeholder","length","height","width","overflow","padding","borderBottom","Table2","d","idx","App","fileUploadRef","_useState","useState","_useState2","setHeading","_useState3","_useState4","setItems","_useState5","_useState6","_useState7","_useState8","setData","useEffect","Object","keys","table","data","_toConsumableArray","type","onChange","e","file","target","files","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_json","onerror","error","then","accept","visibility","click","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27b04fa3.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\n\r\nconst Table1 = ({ heading, selectedItems, setSelectedItems, handleShift }) => {\r\n  const componentToPrintRef = useRef();\r\n  const handleOnDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n    const items = Array.from(selectedItems);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n    setSelectedItems(items);\r\n  };\r\n  const handleExport = useReactToPrint({\r\n    content: () => componentToPrintRef.current,\r\n  });\r\n  return (\r\n    <div className=\"table_box\">\r\n      <h2\r\n        style={{\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        Table - I\r\n      </h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            {heading.map((h) => (\r\n              <th scope=\"col\" className=\"table_heading\">\r\n                {h}\r\n              </th>\r\n            ))}\r\n            <th className=\"table_heading\">&nbsp;</th>\r\n          </tr>\r\n        </thead>\r\n        <DragDropContext onDragEnd={handleOnDragEnd}>\r\n          <Droppable droppableId=\"characters\">\r\n            {(provided) => (\r\n              <tbody\r\n                className=\"characters\"\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {selectedItems.map((ob, index) => {\r\n                  return (\r\n                    <Draggable\r\n                      key={`${ob[heading[0]] + index}`}\r\n                      draggableId={`${ob[heading[0]] + index}`}\r\n                      index={index}\r\n                    >\r\n                      {(provided) => (\r\n                        <tr\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                        >\r\n                          {heading.map((h) => {\r\n                            return (\r\n                              <td align=\"center\" className=\"table_data\">\r\n                                {ob[h]}\r\n                              </td>\r\n                            );\r\n                          })}\r\n                          <td\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                            }}\r\n                            className=\"table_data\"\r\n                            align=\"center\"\r\n                            onClick={() => handleShift(0, index)}\r\n                          >\r\n                            ðŸ”»\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </tbody>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </table>\r\n      {selectedItems.length > 0 ? (\r\n        <button className=\"export_button\" onClick={handleExport}>\r\n          Print PDF\r\n        </button>\r\n      ) : null}\r\n      {/* NOTE: Hidden component to print */}\r\n      <section\r\n        style={{\r\n          height: \"0px\",\r\n          width: \"0px\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <table className=\"table\" ref={componentToPrintRef}>\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                align=\"left\"\r\n                style={{\r\n                  width: \"30px\",\r\n                }}\r\n              >\r\n                SL No.\r\n              </th>\r\n              {heading.map((h, index) => (\r\n                <th\r\n                  scope=\"col\"\r\n                  align={index === 0 ? \"left\" : \"center\"}\r\n                  className=\"table_heading\"\r\n                >\r\n                  {h}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {selectedItems.map((ob, index) => {\r\n              return (\r\n                <tr>\r\n                  <td\r\n                    style={{\r\n                      padding: \"10px 10px 10px 5px\",\r\n                      borderBottom: \"1px solid gray\",\r\n                    }}\r\n                  >\r\n                    {index + 1}\r\n                  </td>\r\n                  {heading.map((h, index) => {\r\n                    return (\r\n                      <td\r\n                        align={index === 0 ? \"left\" : \"center\"}\r\n                        className=\"table_data\"\r\n                      >\r\n                        {ob[h]}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table1;\r\n","import React from \"react\";\n\nconst Table2 = ({ heading, items, handleShift }) => {\n  return (\n    <div className=\"table_box\">\n      <h2\n        style={{\n          textAlign: \"center\",\n        }}\n      >\n        Table - II\n      </h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            {heading.map((h) => (\n              <th scope=\"col\" className=\"table_heading\">\n                {h}\n              </th>\n            ))}\n            <th className=\"table_heading\">&nbsp;</th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((d, idx) => (\n            <tr key={idx}>\n              {heading.map((h) => {\n                return <td align=\"center\" className=\"table_data\">{d[h]}</td>;\n              })}\n              <td\n                style={{\n                  cursor: \"pointer\",\n                }}\n                align=\"center\"\n                className=\"table_data\"\n                onClick={() => handleShift(1, idx)}\n              >\n                ðŸ”¼\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table2;\n","import React, { useState, useEffect , useRef } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport \"./App.css\";\nimport Table1 from \"./components/Table1\";\nimport Table2 from \"./components/Table2\";\n\nconst App = () => {\n  const fileUploadRef = useRef(null);\n  const [heading, setHeading] = useState([]);\n  const [items, setItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [data, setData] = useState(null)\n  useEffect(() => {\n    if (items.length !== 0) {\n      setHeading(Object.keys(items[0]));\n    }\n  }, [items]);\n  const readExcel = (file) => {\n    const promise = new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n\n      fileReader.onload = (e) => {\n        const bufferArray = e.target.result;\n\n        const wb = XLSX.read(bufferArray, { type: \"buffer\" });\n\n        const wsname = wb.SheetNames[0];\n\n        const ws = wb.Sheets[wsname];\n\n        const data = XLSX.utils.sheet_to_json(ws);\n\n        resolve(data);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n\n    promise.then((d) => {\n      setItems(d);\n    });\n  };\n  const handleShift = (table, index) => {\n    if (table) {\n      let data = items[index];\n      if (data) {\n        items.splice(index, 1);\n        setSelectedItems([...selectedItems, data]);\n      }\n    } else {\n      let data = selectedItems[index];\n      if (data) {\n        selectedItems.splice(index, 1);\n        setItems([...items, data]);\n      }\n    }\n  };\n  return (\n    <div className=\"main\"  >\n      {items.length === 0 && selectedItems.length === 0 ? (\n        <div className=\"input_container\">\n          <div className=\"input_box\">\n              <h2>UPLOAD FILE</h2>\n              <h3 className=\"text-center\">\n                Upload a .xlsx file \n              </h3>\n              <div>\n                <input\n                  type=\"file\"\n                  ref={fileUploadRef}\n                  onChange={(e) => {\n                    setData(e.target.files[0])\n                    readExcel(e.target.files[0])\n                  }}\n                  accept=\".xlsx\"\n                  style={{\n                    visibility:\"hidden\"\n                  }}\n                />\n                <div className=\"browse-files\">\n                  <button\n                    className=\"btn btn-primary\"\n                    onClick={() => fileUploadRef.current.click()}\n                  >\n                    Browse Files\n                  </button>\n                </div>\n              </div>\n        </div>\n        </div>\n      ) : (\n        <div className=\"table_container\">\n          <Table1\n            heading={heading}\n            selectedItems={selectedItems}\n            setSelectedItems={setSelectedItems}\n            handleShift={handleShift}\n          />\n          <br />\n          <br />\n          <br />\n          <Table2 heading={heading} items={items} handleShift={handleShift} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}